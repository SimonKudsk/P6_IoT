services:
  nginx:
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./config/nginx/certs:/etc/nginx/certs
      - ./config/nginx/templates/:/etc/nginx/templates
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/httpdirectives.conf:/etc/nginx/httpdirectives.conf
    environment:
      - INFLUXDB_HOST=${INFLUXDB_HOST:-influxdb.p6.test}
      - GRAFANA_HOST=${GRAFANA_HOST:-grafana.p6.test}
      - NODERED_HOST=${NODERED_HOST:-nodered.p6.test}
    depends_on:
      - influxdb
      - grafana
      - nodered
    networks:
        - iot-net

  cloudflared:
    profiles: [ 'prod' ]
    build: ./dockerfiles/cloudflared/
    depends_on:
      - nginx
    restart: always
    volumes:
      - ./config/cloudflared:/etc/cloudflared
    environment:
      - TUNNEL_ID=${TUNNEL_ID}
      - WILDCARD_DOMAIN=${WILDCARD_DOMAIN}

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    ports:
      - "1883:1883"
    volumes:
      - ./config/mosquitto/config:/mosquitto/config
      - ./data/mosquitto/data:/mosquitto/data
      - ./data/mosquitto/log:/mosquitto/log
    networks:
      - iot-net

  telegraf:
    image: telegraf
    container_name: telegraf
    volumes:
      - ./config/telegraf/telegraf.conf.template:/etc/telegraf/telegraf.conf.template:ro
    environment:
      - TELEGRAF_AGENT_INTERVAL=5s
      - TELEGRAF_ROUND_INTERVAL=true
      - MQTT_SERVERS=tcp://mosquitto:1883
      - MQTT_TOPICS=kedel/#
      - TELEGRAF_DATA_FORMAT=value
      - TELEGRAF_DATA_TYPE=float
      - TELEGRAF_TOPIC_TAG=topic
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - INFLUX_ORG=${INFLUXDB_ORG}
      - INFLUX_BUCKET=${INFLUXDB_DB}
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - iot-net

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - ./data/influxdb:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_DB}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    networks:
      - iot-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "33:33"
    depends_on:
      - influxdb
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - INFLUX_ORG=${INFLUXDB_ORG}
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    volumes:
      - ./config/grafana/datasource.yml:/etc/grafana/provisioning/datasource.yml
      - ./data/grafana:/var/lib/grafana
    networks:
      - iot-net

  nodered:
    image: nodered/node-red:latest
    container_name: nodered
    user: "33:33"
    ports:
      - "1880:1880"
    volumes:
      - ./data/node-red:/data
    networks:
      - iot-net

networks:
  iot-net:
    driver: bridge